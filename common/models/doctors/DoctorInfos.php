<?php

namespace common\models\doctors;

use Yii;

/**
 * This is the model class for table "{{%doctor_infos}}".
 *
 * @property int $id
 * @property int $uid Uid
 * @property int $hospital_id 医院ID
 * @property string $name 医生姓名
 * @property string $doctor_type 科目
 * @property string $role 等级
 * @property string $hospital_location 医院地址
 * @property string $hospital_name 医院名称
 * @property string $certificate 证书
 * @property int $create_at
 * @property int $update_at
 */
class DoctorInfos extends My
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%doctor_infos}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['uid', 'hospital_id', 'created_at', 'updated_at'], 'integer'],
            [['name', 'doctor_type'], 'required'],
            [['certificate'], 'string'],
            [['name', 'role', 'hospital_location', 'hospital_name'], 'string', 'max' => 255],
            [['doctor_type'], 'string', 'max' => 10],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'uid' => 'Uid',
            'hospital_id' => '医院ID',
            'name' => '医生姓名',
            'doctor_type' => '科目',
            'role' => '等级',
            'hospital_location' => '医院地址',
            'hospital_name' => '医院名称',
            'certificate' => '证书',
            'created_at' => 'Create At',
            'updated_at' => 'Update At',
        ];
    }

    /**
     * {@inheritdoc}
     * @return DoctorInfosQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new DoctorInfosQuery(get_called_class());
    }

    static function getHospitalIdByUid($uid)
    {
        return self::findOne(['id' => $uid])->toArray()['hospital_id'];
    }

    static function findAll($condition = null)
    {
        if (is_array($condition)){
            return parent::findAll($condition); // TODO: Change the autogenerated stub
        }else{
            if (is_string($condition)){
                return self::find()->where($condition)->all();
            }elseif(!$condition){
                return self::find()->all();
            }
        }
    }
}
